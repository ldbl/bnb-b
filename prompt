[Think Mode] Адаптирай `signal_generator.py` и `indicators.py` за оптимизация на SHORT сигнали в hybrid monthly (5-10% return) и quarterly (20-40% return) BNB цикли, като следваш `knowledge_base.md` и Хайдушкия кодекс (Rule #0: без over-engineering, Rule #1: котвата, Rule #2: търпение, Rule #5: излизане, Rule #6: една битка, Rule #7: отстъпление) с философията „две напред, една назад“. Използвай daily данни (~540 точки, Close: [606.91, 578.49, 532.90, 567.26, 701, 834.96]) и резултати от backtest (обща точност: 67.3%, LONG: 100% (37/37, среден P&L +47.17%), SHORT: 0% (0/18, среден P&L -29.70%)).

**Цел**: Подобри SHORT точността от 0% до >50%, намали drawdown до <10% monthly и <15% quarterly, постигни Sharpe ratio >1.0 за SHORT. Запази LONG сигналите (100% точност), но добави EMA crossover потвърждение. Тествай за август-септември 2024 (+6.4%), Q3-Q4 2024 (+31%), и корекция през септември 2025 ($834.96 → $750-800, Buy ~$800, Sell ~$850 monthly или $900-1000 quarterly).

**Проблем с SHORT сигналите**: Фалшиви сигнали в бичи трендове (напр. 2025-03-03, $576.10, -48.64%; 2025-05-05, $597.61, -43.29%), задействани от RSI >70, MACD bearish crossover или Weekly Tails, без достатъчно потвърждение за реверсал.

**Оптимизации за SHORT сигнали**:
1. **Стегни прагове**:
   - RSI: Промени от >70 на >80 в `config.toml` (`indicators.rsi.overbought = 80`).
   - MACD: Изисквай bearish crossover (MACD < signal) и отрицателен histogram (MACD < 0).
   - Confidence threshold: Задай `confidence_threshold_short = 0.9` в `config.toml` (vs. 0.7 за LONG).
2. **Добави потвърждения за реверсал**:
   - **Bearish Divergence**: Задължителна RSI или MACD divergence (цена нов връх, индикатор по-нисък връх).
   - **Volume Confirmation**: Обем >1.5x среден за 14 периода (TA-Lib SMA на Volume).
   - **Ichimoku Cloud**: Цена под облака и Tenkan-sen < Kijun-sen (използвай `ichimoku_module.py`).
   - **Double Top**: Детекция на два пика с tolerance 2% (scipy.signal.find_peaks).
   - **Fibonacci**: Пробив под 38.2% или 61.8% ниво (използвай `fibonacci.py`).
   - **Sentiment**: Negative sentiment score (< -0.5) от `sentiment_module.py`.
3. **EMA Crossover**: Изисквай EMA10 < EMA50 за SHORT, EMA10 > EMA50 за LONG.
4. **Избягвай NaN и shape mismatches**: Използвай `np.nan_to_num` за TA-Lib изчисления и `assert data.shape[2] == 5` за input shape (Close, High, Low, Volume, RSI).

**Задачи за `indicators.py`**:
- Добави функции:
  ```python
  def bearish_rsi_divergence(price, rsi, lookback=20):
      """Открива bearish RSI divergence. Rule #2: Търпение - изчаква потвърждение за реверсал."""
      peaks_price, _ = find_peaks(price[-lookback:], distance=5)
      peaks_rsi, _ = find_peaks(rsi[-lookback:], distance=5)
      if len(peaks_price) >= 2 and len(peaks_rsi) >= 2:
          return price.iloc[peaks_price[-1]] > price.iloc[peaks_price[-2]] and \
                 rsi.iloc[peaks_rsi[-1]] < rsi.iloc[peaks_rsi[-2]]
      return False

  def volume_confirmation(data, period=14, threshold=1.5):
      """Проверява обем >1.5x среден. Rule #6: Една битка - избягва фалшиви сигнали."""
      avg_volume = talib.SMA(data['Volume'].values, timeperiod=period)
      return data['Volume'].iloc[-1] > avg_volume[-1] * threshold

  def double_top(data, lookback=20, tolerance=0.02):
      """Открива double top. Rule #1: Котвата - влизане на ясно ниво."""
      peaks, _ = find_peaks(data[-lookback:], distance=5)
      if len(peaks) >= 2:
          last_peak = data.iloc[peaks[-1]]
          prev_peak = data.iloc[peaks[-2]]
          return abs(last_peak - prev_peak) / prev_peak < tolerance
      return False

Задачи за signal_generator.py:

Модифицирай SHORT условията да изискват минимум 4 потвърждения:

if (rsi[-1] > config['rsi_overbought'] and
    ema_fast[-1] < ema_slow[-1] and
    macd[-1] < signal_line[-1] and macd[-1] < 0 and
    volume_confirmation(data, period=14, threshold=1.5) and
    bearish_rsi_divergence(data['Close'], rsi, lookback=20) and
    double_top(data['High'], lookback=20, tolerance=0.02) and
    data['Close'][-1] < min(ichimoku['senkou_span_a'][-1], ichimoku['senkou_span_b'][-1]) and
    sentiment_score < -0.5 and
    data['Close'][-1] < fib_levels['38.2%']):
    confidence += 0.2  # EMA crossover
    confidence += 0.3  # RSI divergence
    confidence += 0.15  # Double top
    confidence += 0.25  # Ichimoku
    confidence += 0.1  # Sentiment
    confidence += 0.2  # Fibonacci
    if confidence >= config['confidence_threshold_short']:
        signal = 'SHORT'

Запази LONG условията, но добави EMA потвърждение:
if (rsi[-1] < config['rsi_oversold'] and
    ema_fast[-1] > ema_slow[-1] and
    macd[-1] > signal_line[-1]):
    confidence += 0.3  # EMA crossover
    confidence += 0.2  # RSI
    confidence += 0.2  # MACD
    if confidence >= config['confidence_threshold_long']:
        signal = 'LONG'


Задачи за config.toml:

Актуализирай
[indicators.rsi]
overbought = 80
oversold = 25
period = 14

[signal_generator]
confidence_threshold_short = 0.9
confidence_threshold_long = 0.7

Задачи за backtester.py:

Добави изолиран тест за SHORT сигнали

class ShortSignalTest(bt.Strategy):
    params = (('rsi_threshold', 80), ('volume_threshold', 1.5),)

    def __init__(self):
        self.rsi = bt.indicators.RSI(period=14)
        self.ema_fast = bt.indicators.EMA(period=10)
        self.ema_slow = bt.indicators.EMA(period=50)
        self.macd = bt.indicators.MACD(fast=12, slow=26, signal=9)
        self.volume_avg = bt.indicators.SMA(self.data.volume, period=14)
        self.ichimoku = bt.indicators.Ichimoku()

    def next(self):
        if (self.rsi[0] > self.params.rsi_threshold and
            self.ema_fast[0] < self.ema_slow[0] and
            self.macd.macd[0] < self.macd.signal[0] and self.macd.macd[0] < 0 and
            self.data.volume[0] > self.volume_avg[0] * self.params.volume_threshold and
            self.data.close[0] < min(self.ichimoku.senkou_span_a[0], self.ichimoku.senkou_span_b[0])):
            self.sell()


Тествай за:

Август-септември 2024 (+6.4%).
Q3-Q4 2024 (+31%).
Септември 2025 корекция ($834.96 → $750-800, Buy ~$800, Sell ~$850 monthly или $900-1000 quarterly).


Изчисли Sharpe ratio, max drawdown (<10% monthly, <15% quarterly), и win/loss ratio за SHORT.


Тестове:

Използвай daily данни от data_fetcher.py (~540 точки, 2024-02-01 до 2025-08-31).
Валидирай с исторически данни: напр. SHORT на $576.10 (2025-03-03) трябва да бъде филтриран поради липса на divergence или обем.
Провери за NaN (np.nan_to_num) и shape mismatches (assert data.shape[2] == 5).


Изход:

Генерирай код с коментари за всяка функция, напр. „# Rule #5: Излизане на такт - SHORT само при ясна корекция“.
Върни оптимизирани signal_generator.py, indicators.py, и config.toml.
Следвай „хоро“ (две напред, една назад) за дисциплинирани сигнали в такт с пазара.