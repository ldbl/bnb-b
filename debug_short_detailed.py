#!/usr/bin/env python3
"""
–î–µ—Ç–∞–π–ª–Ω–æ –¥–µ–±—ä–≥–≤–∞–Ω–µ –Ω–∞ SHORT —Å–∏–≥–Ω–∞–ª–∏ - –ø—Ä–æ—Å–ª–µ–¥—è–≤–∞–Ω–µ –Ω–∞ –≤—Å—è–∫–∞ —Å—Ç—ä–ø–∫–∞
"""

import sys
sys.path.append('.')

import pandas as pd
import numpy as np
import toml
from data_fetcher import BNBDataFetcher
from signal_generator import SignalGenerator
from weekly_tails import WeeklyTailsAnalyzer
from fibonacci import FibonacciAnalyzer
import logging

# –ù–∞–º–∞–ª—è–≤–∞–º–µ logging
logging.getLogger().setLevel(logging.ERROR)

def debug_short_detailed():
    """–î–µ—Ç–∞–π–ª–Ω–æ –¥–µ–±—ä–≥–≤–∞–Ω–µ –Ω–∞ SHORT —Å–∏–≥–Ω–∞–ª–∏"""

    print("üîç –î–ï–¢–ê–ô–õ–ù–û –î–ï–ë–™–ì–í–ê–ù–ï –ù–ê SHORT –°–ò–ì–ù–ê–õ–ò")
    print("=" * 60)

    try:
        # –ó–∞—Ä–µ–∂–¥–∞–º–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è—Ç–∞
        config_data = toml.load('config.toml')

        # –ò–∑–≤–ª–∏—á–∞–º–µ –¥–∞–Ω–Ω–∏
        data_fetcher = BNBDataFetcher()
        print("üìä –ò–∑–≤–ª–∏—á–∞–Ω–µ –Ω–∞ –¥–∞–Ω–Ω–∏...")
        data = data_fetcher.fetch_bnb_data(300)  # 300 –¥–Ω–∏ –∑–∞ –ø–æ-–¥—ä–ª—ä–≥ –ø–µ—Ä–∏–æ–¥

        if not data or 'weekly' not in data:
            print("‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –∏–∑–≤–ª–∏—á–∞–Ω–µ –Ω–∞ –¥–∞–Ω–Ω–∏")
            return

        weekly_df = data['weekly']
        daily_df = data['daily']
        print(f"‚úÖ –ò–∑–≤–ª–µ—á–µ–Ω–∏ {len(daily_df)} –¥–Ω–µ–≤–Ω–∏ –∏ {len(weekly_df)} —Å–µ–¥–º–∏—á–Ω–∏ –∑–∞–ø–∏—Å–∞")

        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–∞–º–µ –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∏—Ç–µ
        weekly_tails_analyzer = WeeklyTailsAnalyzer(config_data)
        fib_analyzer = FibonacciAnalyzer(config_data)
        signal_generator = SignalGenerator(config_data)

        print("\nüîç –ê–ù–ê–õ–ò–ó –ù–ê SHORT –°–ò–ì–ù–ê–õ–ò –ü–û –°–¢–™–ü–ö–ò...")
        print("   –©–µ –ø—Ä–æ—Å–ª–µ–¥–∏–º –≤—Å—è–∫–∞ —Å—Ç—ä–ø–∫–∞ –æ—Ç –∞–Ω–∞–ª–∏–∑–∞ –¥–æ –∫—Ä–∞–π–Ω–∏—è —Å–∏–≥–Ω–∞–ª")

        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        total_weeks = 0
        weeks_with_short_candidates = 0
        weeks_with_short_signals = 0
        blocked_by_trend = 0
        blocked_by_fib = 0
        blocked_by_other = 0

        # –ê–Ω–∞–ª–∏–∑–∏—Ä–∞–º–µ –ø–æ—Å–ª–µ–¥–Ω–∏—Ç–µ 30 —Å–µ–¥–º–∏—Ü–∏
        for i in range(max(10, len(weekly_df) - 30), len(weekly_df)):
            current_date = weekly_df.index[i]
            current_weekly = weekly_df.iloc[:i+1]
            current_daily = daily_df[daily_df.index <= current_date]

            if len(current_daily) < 50 or len(current_weekly) < 4:
                continue

            total_weeks += 1

            try:
                # –°–¢–™–ü–ö–ê 1: –ê–Ω–∞–ª–∏–∑–∏—Ä–∞–º–µ weekly tails
                tails_analysis = weekly_tails_analyzer.analyze_weekly_tails(current_weekly)

                # –¢—ä—Ä—Å–∏–º SHORT –∫–∞–Ω–¥–∏–¥–∞—Ç–∏ –æ—Ç weekly tails
                short_candidates = [t for t in tails_analysis if t.get('signal') == 'SHORT']

                if short_candidates:
                    weeks_with_short_candidates += 1
                    print(f"\nüü¢ –°–ï–î–ú–ò–¶–ê {current_date.date()}:")
                    print(f"   üìä –ù–∞–º–µ—Ä–µ–Ω–∏ {len(short_candidates)} SHORT –∫–∞–Ω–¥–∏–¥–∞—Ç–∏ –æ—Ç weekly_tails")

                    for candidate in short_candidates:
                        print(f"   üïØÔ∏è SHORT –∫–∞–Ω–¥–∏–¥–∞—Ç: —Å–∏–ª–∞={candidate.get('tail_strength', 0):.2f}, —Ü–µ–Ω–∞=${candidate.get('close', 0):.2f}")

                    # –°–¢–™–ü–ö–ê 2: –ü—Ä–æ–≤–µ—Ä—è–≤–∞–º–µ Fibonacci –∞–Ω–∞–ª–∏–∑
                    fib_analysis = fib_analyzer.analyze_fibonacci_trend(current_daily)

                    # –°–¢–™–ü–ö–ê 3: –ì–µ–Ω–µ—Ä–∏—Ä–∞–º–µ —Å–∏–≥–Ω–∞–ª –ø—Ä–µ–∑ signal_generator
                    signal = signal_generator.generate_signal(current_daily, current_weekly)

                    if signal and signal.get('signal') == 'SHORT':
                        weeks_with_short_signals += 1
                        print(f"   ‚úÖ –ö–†–ê–ï–ù –†–ï–ó–£–õ–¢–ê–¢: SHORT —Å–∏–≥–Ω–∞–ª –≥–µ–Ω–µ—Ä–∏—Ä–∞–Ω!")
                        print(f"   üìä –£–≤–µ—Ä–µ–Ω–æ—Å—Ç: {signal.get('confidence', 0):.2f}")

                        # –ü–æ–∫–∞–∑–≤–∞–º–µ –¥–µ—Ç–∞–π–ª–∏ –∑–∞ —Å–∏–≥–Ω–∞–ª–∞
                        if 'weekly_tails_analysis' in signal:
                            tails_signal = signal['weekly_tails_analysis'].get('tails_signal', {})
                            print(f"   üïØÔ∏è Weekly Tails: {tails_signal.get('signal', 'UNKNOWN')} (—Å–∏–ª–∞: {tails_signal.get('strength', 0):.2f})")

                        if 'fibonacci_analysis' in signal:
                            fib_signal = signal['fibonacci_analysis'].get('fibonacci_signal', 'UNKNOWN')
                            print(f"   üéØ Fibonacci: {fib_signal}")

                        # –ü–æ–∫–∞–∑–≤–∞–º–µ ATH proximity –±–æ–Ω—É—Å –∞–∫–æ –∏–º–∞ —Ç–∞–∫—ä–≤
                        if 'reasons' in signal:
                            ath_reasons = [r for r in signal['reasons'] if 'ATH Proximity' in r]
                            if ath_reasons:
                                for reason in ath_reasons:
                                    print(f"   üî• {reason}")

                    else:
                        print(f"   ‚ùå –ö–†–ê–ï–ù –†–ï–ó–£–õ–¢–ê–¢: {signal.get('signal', 'HOLD') if signal else '–ù—è–º–∞ —Å–∏–≥–Ω–∞–ª'}")
                        print("   üîç –ü—Ä–∏—á–∏–Ω–∞ –∑–∞ –±–ª–æ–∫–∏—Ä–∞–Ω–µ:")
                        # –ê–Ω–∞–ª–∏–∑–∏—Ä–∞–º–µ –∑–∞—â–æ –µ –±–ª–æ–∫–∏—Ä–∞–Ω
                        if signal and 'reasons' in signal:
                            for reason in signal['reasons']:
                                print(f"      - {reason}")

                        # –ü—Ä–æ–≤–µ—Ä—è–≤–∞–º–µ —Ç—Ä–µ–Ω–¥ –∞–Ω–∞–ª–∏–∑
                        trend_analysis = signal.get('trend_analysis', {}) if signal else {}
                        if trend_analysis:
                            combined_trend = trend_analysis.get('combined_trend', {})
                            daily_trend = trend_analysis.get('daily_trend', {})
                            trend_direction = combined_trend.get('direction', 'UNKNOWN')
                            daily_direction = daily_trend.get('direction', 'UNKNOWN')
                            daily_strength = daily_trend.get('strength', 'UNKNOWN')

                            print(f"   üìà –¢—Ä–µ–Ω–¥: Combined={trend_direction}, Daily={daily_direction} ({daily_strength})")

                            if trend_direction in ['UPTREND', 'STRONG_UPTREND'] or daily_direction == 'UPTREND':
                                if daily_strength in ['MODERATE', 'STRONG']:
                                    blocked_by_trend += 1
                                    print("   üö´ SHORT –±–ª–æ–∫–∏—Ä–∞–Ω –æ—Ç —Ç—Ä–µ–Ω–¥ —Ñ–∏–ª—Ç—ä—Ä!")

                else:
                    # –ù—è–º–∞ SHORT –∫–∞–Ω–¥–∏–¥–∞—Ç–∏ –æ—Ç weekly tails
                    print(f"\n‚ö™ –°–ï–î–ú–ò–¶–ê {current_date.date()}: –ù—è–º–∞ SHORT –∫–∞–Ω–¥–∏–¥–∞—Ç–∏ –æ—Ç weekly_tails")

            except Exception as e:
                print(f"   ‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑ –Ω–∞ —Å–µ–¥–º–∏—Ü–∞ {current_date.date()}: {e}")

        # –§–∏–Ω–∞–ª–Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        print(f"\nüìä –§–ò–ù–ê–õ–ù–ê –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
        print(f"   üìÖ –û–±—â–æ –∞–Ω–∞–ª–∏–∑–∏—Ä–∞–Ω–∏ —Å–µ–¥–º–∏—Ü–∏: {total_weeks}")
        print(f"   üïØÔ∏è –°–µ–¥–º–∏—Ü–∏ —Å SHORT –∫–∞–Ω–¥–∏–¥–∞—Ç–∏: {weeks_with_short_candidates}")
        print(f"   ‚úÖ –°–µ–¥–º–∏—Ü–∏ —Å SHORT —Å–∏–≥–Ω–∞–ª–∏: {weeks_with_short_signals}")
        print(f"   üö´ SHORT –±–ª–æ–∫–∏—Ä–∞–Ω–∏ –æ—Ç —Ç—Ä–µ–Ω–¥: {blocked_by_trend}")
        print(f"   üö´ SHORT –±–ª–æ–∫–∏—Ä–∞–Ω–∏ –æ—Ç Fibonacci: {blocked_by_fib}")
        print(f"   üö´ SHORT –±–ª–æ–∫–∏—Ä–∞–Ω–∏ –æ—Ç –¥—Ä—É–≥–∏: {blocked_by_other}")

        # –ê–Ω–∞–ª–∏–∑ –Ω–∞ —Ä–µ–∑—É–ª—Ç–∞—Ç–∏—Ç–µ
        if weeks_with_short_candidates == 0:
            print("\n‚ùå –ü–†–û–ë–õ–ï–ú: –ù—è–º–∞ SHORT –∫–∞–Ω–¥–∏–¥–∞—Ç–∏ –æ—Ç weekly_tails –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞!")
            print("   üí° –í—ä–∑–º–æ–∂–Ω–∏ –ø—Ä–∏—á–∏–Ω–∏:")
            print("      - BNB –Ω—è–º–∞ –≥–æ—Ä–Ω–∏ –æ–ø–∞—à–∫–∏ –≤ —Ç–æ–∑–∏ –ø–µ—Ä–∏–æ–¥")
            print("      - –ü–∞—Ä–∞–º–µ—Ç—Ä–∏—Ç–µ –∑–∞ SHORT —Å–∞ —Ç–≤—ä—Ä–¥–µ —Å—Ç—Ä–æ–≥–∏")
            print("      - –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏ –ø—Ä–æ–±–ª–µ–º –≤ weekly_tails –º–æ–¥—É–ª–∞")

        elif weeks_with_short_signals == 0:
            print("\n‚ùå –ü–†–û–ë–õ–ï–ú: –ò–º–∞ SHORT –∫–∞–Ω–¥–∏–¥–∞—Ç–∏, –Ω–æ –≤—Å–∏—á–∫–∏ —Å–µ –±–ª–æ–∫–∏—Ä–∞—Ç!")
            print("   üí° –ù–∞–π-–≤–µ—Ä–æ—è—Ç–Ω–∞ –ø—Ä–∏—á–∏–Ω–∞:")
            print("      - –¢—Ä–µ–Ω–¥ —Ñ–∏–ª—Ç—Ä–∏—Ç–µ –±–ª–æ–∫–∏—Ä–∞—Ç –≤—Å–∏—á–∫–∏ SHORT —Å–∏–≥–Ω–∞–ª–∏")
            print("      - BNB –µ –≤ —Å–∏–ª–µ–Ω bull run –ø–µ—Ä–∏–æ–¥")

        else:
            print("\n‚úÖ –£–°–ü–ï–•: –ò–º–∞ —Ä–∞–±–æ—Ç–µ—â–∏ SHORT —Å–∏–≥–Ω–∞–ª–∏!")

    except Exception as e:
        print(f"‚ùå –ì–†–ï–®–ö–ê: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    debug_short_detailed()
