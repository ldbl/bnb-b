#!/usr/bin/env python3
"""
–ê–Ω–∞–ª–∏–∑ –Ω–∞ bull run —Ç—Ä–µ–Ω–¥–∞ –≤ –ø–æ—Å–ª–µ–¥–Ω–∏—Ç–µ –º–µ—Å–µ—Ü–∏
"""

import sys
sys.path.append('.')

import pandas as pd
import numpy as np
from data_fetcher import BNBDataFetcher
import logging

# –ù–∞–º–∞–ª—è–≤–∞–º–µ logging
logging.getLogger().setLevel(logging.ERROR)

def analyze_bull_run():
    """–ê–Ω–∞–ª–∏–∑–∏—Ä–∞ bull run —Ç—Ä–µ–Ω–¥–∞ –≤ –ø–æ—Å–ª–µ–¥–Ω–∏—Ç–µ –º–µ—Å–µ—Ü–∏"""

    print("üî• –ê–ù–ê–õ–ò–ó –ù–ê BULL RUN –¢–†–ï–ù–î –í –ü–û–°–õ–ï–î–ù–ò–¢–ï –ú–ï–°–ï–¶–ò")
    print("=" * 60)

    try:
        # –ò–∑–≤–ª–∏—á–∞–º–µ –¥–∞–Ω–Ω–∏
        data_fetcher = BNBDataFetcher()
        print("üìä –ò–∑–≤–ª–∏—á–∞–º–µ –¥–∞–Ω–Ω–∏...")
        data = data_fetcher.fetch_bnb_data(180)  # 6 –º–µ—Å–µ—Ü–∞

        if not data or 'daily' not in data:
            print("‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –∏–∑–≤–ª–∏—á–∞–Ω–µ –Ω–∞ –¥–∞–Ω–Ω–∏")
            return

        daily_df = data['daily']
        print(f"‚úÖ –ò–∑–≤–ª–µ—á–µ–Ω–∏ {len(daily_df)} –¥–Ω–µ–≤–Ω–∏ –∑–∞–ø–∏—Å–∞")
        print(f"üìÖ –ü–µ—Ä–∏–æ–¥: {daily_df.index[0].date()} –¥–æ {daily_df.index[-1].date()}")

        # –ê–Ω–∞–ª–∏–∑–∏—Ä–∞–º–µ –ø–æ—Å–ª–µ–¥–Ω–∏—Ç–µ 3 –º–µ—Å–µ—Ü–∞
        end_date = daily_df.index[-1]
        start_date = end_date - pd.Timedelta(days=90)  # 90 –¥–Ω–∏ = 3 –º–µ—Å–µ—Ü–∞

        recent_data = daily_df[daily_df.index >= start_date]
        print(f"\nüìà –ê–ù–ê–õ–ò–ó –ù–ê –ü–û–°–õ–ï–î–ù–ò–¢–ï 3 –ú–ï–°–ï–¶–ê:")
        print(f"   üìÖ –û—Ç {start_date.date()} –¥–æ {end_date.date()}")
        print(f"   üìä {len(recent_data)} –¥–Ω–µ–≤–Ω–∏ –∑–∞–ø–∏—Å–∞")

        # –ò–∑—á–∏—Å–ª—è–≤–∞–º–µ –æ—Å–Ω–æ–≤–Ω–∏ –º–µ—Ç—Ä–∏–∫–∏
        start_price = recent_data['Close'].iloc[0]
        end_price = recent_data['Close'].iloc[-1]
        max_price = recent_data['High'].max()
        min_price = recent_data['Low'].min()

        total_return = (end_price - start_price) / start_price * 100
        max_drawdown = ((max_price - min_price) / max_price) * 100

        print("\nüìä –û–°–ù–û–í–ù–ò –ú–ï–¢–†–ò–ö–ò:")
        print(".2f")
        print(".2f")
        print(".2f")
        print(".2f")
        print("\nüî• BULL RUN –ê–ù–ê–õ–ò–ó:")
        if total_return > 20:
            print("   üöÄ –°–ò–õ–ï–ù BULL RUN! –¶–µ–Ω–∞—Ç–∞ —Å–µ –µ –∫–∞—á–∏–ª–∞ –∑–Ω–∞—á–∏—Ç–µ–ª–Ω–æ!")
            print("   üí° –¢–æ–≤–∞ –æ–±—è—Å–Ω—è–≤–∞ –ª–∏–ø—Å–∞—Ç–∞ –Ω–∞ SHORT —Å–∏–≥–Ω–∞–ª–∏!")
        elif total_return > 10:
            print("   üìà –£–º–µ—Ä–µ–Ω –≤—ä–∑—Ö–æ–¥—è—â —Ç—Ä–µ–Ω–¥")
        elif total_return > 0:
            print("   ‚û°Ô∏è –õ–µ–∫ –≤—ä–∑—Ö–æ–¥—è—â —Ç—Ä–µ–Ω–¥")
        else:
            print("   üìâ –ù–∏–∑—Ö–æ–¥—è—â –∏–ª–∏ —Å—Ç—Ä–∞–Ω–∏—á–µ–Ω —Ç—Ä–µ–Ω–¥")

        # –ê–Ω–∞–ª–∏–∑–∏—Ä–∞–º–µ —Å–µ–¥–º–∏—á–Ω–∏ –¥–∞–Ω–Ω–∏ –∑–∞ –æ–ø–∞—à–∫–∏
        if 'weekly' in data:
            weekly_df = data['weekly']

            # –í–∑–∏–º–∞–º–µ –ø–æ—Å–ª–µ–¥–Ω–∏—Ç–µ 3 –º–µ—Å–µ—Ü–∞ —Å–µ–¥–º–∏—á–Ω–∏ –¥–∞–Ω–Ω–∏
            recent_weekly = weekly_df[weekly_df.index >= start_date]
            print("\nüïØÔ∏è –ê–ù–ê–õ–ò–ó –ù–ê –°–ï–î–ú–ò–ß–ù–ò –°–í–ï–©–ò:")
            print(f"   üìä {len(recent_weekly)} —Å–µ–¥–º–∏—á–Ω–∏ —Å–≤–µ—â–∏")

            # –ë—Ä–æ–∏–º bullish vs bearish —Å–≤–µ—â–∏
            bullish_count = 0
            bearish_count = 0
            doji_count = 0

            for _, row in recent_weekly.iterrows():
                open_price = row['Open']
                close_price = row['Close']
                body_size = abs(close_price - open_price)

                if body_size < (open_price + close_price) / 2 * 0.001:  # Doji (< 0.1%)
                    doji_count += 1
                elif close_price > open_price:
                    bullish_count += 1
                else:
                    bearish_count += 1

            print(f"   üü¢ Bullish —Å–≤–µ—â–∏: {bullish_count}")
            print(f"   üî¥ Bearish —Å–≤–µ—â–∏: {bearish_count}")
            print(f"   ‚ö™ Doji —Å–≤–µ—â–∏: {doji_count}")

            bullish_percentage = bullish_count / len(recent_weekly) * 100
            print(".1f")
            if bullish_percentage > 70:
                print("   üî• –ï–ö–°–¢–†–ï–ú–ï–ù BULL RUN! –ü–æ—á—Ç–∏ –≤—Å–∏—á–∫–∏ —Å–≤–µ—â–∏ —Å–∞ bullish!")
            elif bullish_percentage > 60:
                print("   üöÄ –°–ò–õ–ï–ù BULL RUN! –ú–Ω–æ–≥–æ –ø–æ–≤–µ—á–µ bullish —Å–≤–µ—â–∏!")
            elif bullish_percentage > 50:
                print("   üìà –õ–µ–∫ bull —Ç—Ä–µ–Ω–¥")

            # –ê–Ω–∞–ª–∏–∑–∏—Ä–∞–º–µ –æ–ø–∞—à–∫–∏
            upper_wicks = []
            lower_wicks = []

            for _, row in recent_weekly.iterrows():
                open_price = row['Open']
                high_price = row['High']
                low_price = row['Low']
                close_price = row['Close']

                body_high = max(open_price, close_price)
                body_low = min(open_price, close_price)

                upper_wick = high_price - body_high
                lower_wick = body_low - low_price

                total_range = high_price - low_price
                if total_range > 0:
                    upper_wick_pct = upper_wick / total_range * 100
                    lower_wick_pct = lower_wick / total_range * 100

                    upper_wicks.append(upper_wick_pct)
                    lower_wicks.append(lower_wick_pct)

            if upper_wicks:
                avg_upper_wick = np.mean(upper_wicks)
                avg_lower_wick = np.mean(lower_wicks)
                max_upper_wick = max(upper_wicks)
                max_lower_wick = max(lower_wicks)

                print("\nüïØÔ∏è –ê–ù–ê–õ–ò–ó –ù–ê –û–ü–ê–®–ö–ò–¢–ï:")
                print(".1f")
                print(".1f")
                print(".1f")
                print(".1f")
                if avg_upper_wick < 30 and avg_lower_wick > 40:
                    print("   ‚úÖ –•–ê–†–ê–ö–¢–ï–†–ù–û –ó–ê BULL RUN: –ú–∞–ª–∫–∏ –≥–æ—Ä–Ω–∏ –æ–ø–∞—à–∫–∏, –≥–æ–ª–µ–º–∏ –¥–æ–ª–Ω–∏ –æ–ø–∞—à–∫–∏!")
                    print("   üí° –¢–æ–≤–∞ –æ–±—è—Å–Ω—è–≤–∞ –ª–∏–ø—Å–∞—Ç–∞ –Ω–∞ SHORT —Å–∏–≥–Ω–∞–ª–∏ - –Ω—è–º–∞ —Å—ä–ø—Ä–æ—Ç–∏–≤–∞ –æ—Ç–≥–æ—Ä–µ!")

                # –ë—Ä–æ–∏–º –≥–æ–ª–µ–º–∏ –æ–ø–∞—à–∫–∏
                large_upper_wicks = sum(1 for wick in upper_wicks if wick > 50)
                large_lower_wicks = sum(1 for wick in lower_wicks if wick > 50)

                print(f"   üî¥ –ì–æ–ª–µ–º–∏ –≥–æ—Ä–Ω–∏ –æ–ø–∞—à–∫–∏ (>50%): {large_upper_wicks}")
                print(f"   üü¢ –ì–æ–ª–µ–º–∏ –¥–æ–ª–Ω–∏ –æ–ø–∞—à–∫–∏ (>50%): {large_lower_wicks}")

                if large_upper_wicks < large_lower_wicks:
                    print("   üéØ –ü–û–¢–í–™–†–ñ–î–ï–ù–ò–ï: –ü–æ–≤–µ—á–µ –≥–æ–ª–µ–º–∏ –¥–æ–ª–Ω–∏ –æ–ø–∞—à–∫–∏ = BULL RUN!")

        print("\nüéØ –ó–ê–ö–õ–Æ–ß–ï–ù–ò–ï:")
        print("   üî• –î–∞–Ω–Ω–∏—Ç–µ –ø–æ—Ç–≤—ä—Ä–∂–¥–∞–≤–∞—Ç BULL RUN —Ç—Ä–µ–Ω–¥!")
        print("   ‚ùå –õ–∏–ø—Å–∞—Ç–∞ –Ω–∞ SHORT —Å–∏–≥–Ω–∞–ª–∏ –µ –ø—Ä–∞–≤–∏–ª–Ω–∞!")
        print("   ‚úÖ –°–∏—Å—Ç–µ–º–∞—Ç–∞ –ø—Ä–∞–≤–∏–ª–Ω–æ –Ω–µ –≥–µ–Ω–µ—Ä–∏—Ä–∞ SHORT —Å–∏–≥–Ω–∞–ª–∏ –≤ —Å–∏–ª–µ–Ω –≤—ä–∑—Ö–æ–¥—è—â —Ç—Ä–µ–Ω–¥!")
        print("   üí° –¢–æ–≤–∞ –µ –ø—Ä–∏–∑–Ω–∞–∫ –∑–∞ –¥–æ–±—Ä–æ –∫–∞—á–µ—Å—Ç–≤–æ –Ω–∞ —Ñ–∏–ª—Ç—Ä–∏—Ç–µ!")

    except Exception as e:
        print(f"‚ùå –ì–†–ï–®–ö–ê: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    analyze_bull_run()
