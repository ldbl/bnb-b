#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –Ω–∞ weekly_tails.py —Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω–∏ –¥–∞–Ω–Ω–∏
"""

import sys
sys.path.append('.')

import pandas as pd
import numpy as np
from weekly_tails import WeeklyTailsAnalyzer
import logging

# –ù–∞–º–∞–ª—è–≤–∞–º–µ logging
logging.getLogger().setLevel(logging.ERROR)

def test_weekly_tails():
    """–¢–µ—Å—Ç–≤–∞ weekly_tails.py —Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω–∏ –¥–∞–Ω–Ω–∏"""

    print("üîß –¢–ï–°–¢ –ù–ê WEEKLY TAILS ANALYZER")
    print("=" * 50)

    # –°—ä–∑–¥–∞–≤–∞–º–µ —Ç–µ—Å—Ç–æ–≤–∏ –¥–∞–Ω–Ω–∏ - –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ BEARISH —Å–≤–µ—â —Å –≥–æ–ª—è–º–∞ –≥–æ—Ä–Ω–∞ –æ–ø–∞—à–∫–∞
    test_data = pd.DataFrame({
        'Open': [600.0, 590.0],  # BEARISH —Å–≤–µ—â (–æ—Ç–≤–æ—Ä—è 600, –∑–∞—Ç–≤–∞—Ä—è 590)
        'High': [650.0, 640.0],  # –ì–æ–ª–µ–º–∏ –≥–æ—Ä–Ω–∏ –æ–ø–∞—à–∫–∏
        'Low': [585.0, 580.0],
        'Close': [590.0, 585.0],
        'Volume': [1000000, 1100000]
    }, index=pd.date_range('2024-01-01', periods=2, freq='W'))

    print("üìä –¢–µ—Å—Ç–æ–≤–∏ –¥–∞–Ω–Ω–∏:")
    print(test_data)

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–∞–º–µ –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞
    config = {
        'weekly_tails': {
            'lookback_weeks': 8,
            'min_tail_size': 0.03,
            'strong_tail_size': 0.05,
            'confluence_bonus': 1.5
        }
    }

    try:
        analyzer = WeeklyTailsAnalyzer(config)
        print("‚úÖ –ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–∞–Ω —É—Å–ø–µ—à–Ω–æ")

        # –¢–µ—Å—Ç–≤–∞–º–µ –∞–Ω–∞–ª–∏–∑ –Ω–∞ –æ–ø–∞—à–∫–∏—Ç–µ
        tails_analysis = analyzer.analyze_weekly_tails(test_data)
        print(f"üìà –ê–Ω–∞–ª–∏–∑–∏—Ä–∞–Ω–∏ –æ–ø–∞—à–∫–∏: {len(tails_analysis)}")

        for i, tail in enumerate(tails_analysis):
            print(f"  {i+1}. {tail['date'].date()}: {tail['dominant_tail']} –æ–ø–∞—à–∫–∞ ({tail['tail_strength']:.1%}) - {tail['signal']}")

        # –¢–µ—Å—Ç–≤–∞–º–µ –≥–µ–Ω–µ—Ä–∏—Ä–∞–Ω–µ –Ω–∞ —Å–∏–≥–Ω–∞–ª
        if tails_analysis:
            signal = analyzer.get_weekly_tails_signal(tails_analysis)
            print(f"üéØ –ì–ï–ù–ï–†–ò–†–ê–ù –°–ò–ì–ù–ê–õ: {signal.get('signal', 'ERROR')} (—Å–∏–ª–∞: {signal.get('strength', 0):.2f})")
            print(f"üìù –ü—Ä–∏—á–∏–Ω–∞: {signal.get('reason', 'ERROR')}")
        else:
            print("‚ùå –ù—è–º–∞ –∞–Ω–∞–ª–∏–∑–∏—Ä–∞–Ω–∏ –æ–ø–∞—à–∫–∏")

    except Exception as e:
        print(f"‚ùå –ì–†–ï–®–ö–ê: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    test_weekly_tails()
