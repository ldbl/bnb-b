name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop, pr*-* ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.13
      uses: actions/setup-python@v4
      with:
        python-version: '3.13'

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install TA-Lib
      run: |
        sudo apt-get update
        sudo apt-get install -y libta-lib-dev python3-dev

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
        pip install -e .

    - name: Lint with flake8
      run: |
        flake8 src/ tests/ --max-line-length=100 --extend-ignore=E203,W503 --count --show-source --statistics

    - name: Format check with black
      run: |
        black --check src/ tests/ --line-length=100

    - name: Import sort check with isort
      run: |
        isort --check-only src/ tests/ --profile=black --line-length=100

    - name: Type check with mypy
      run: |
        mypy src/ --ignore-missing-imports
      continue-on-error: true  # Allow mypy failures for now

    - name: Security check with bandit
      run: |
        bandit -r src/ -f json
      continue-on-error: true  # Allow security warnings for now

    - name: Test with pytest
      run: |
        pytest tests/ -v --cov=src/bnb_trading --cov-report=xml --cov-report=term-missing
      env:
        # Add any required environment variables here
        PYTHONPATH: src

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  integration-tests:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.13
      uses: actions/setup-python@v4
      with:
        python-version: '3.13'

    - name: Install TA-Lib
      run: |
        sudo apt-get update
        sudo apt-get install -y libta-lib-dev python3-dev

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
        pip install -e .

    - name: Run integration tests
      run: |
        pytest tests/ -v -m "integration" --tb=short
      env:
        PYTHONPATH: src

  release:
    runs-on: ubuntu-latest
    needs: [test, integration-tests]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.13
      uses: actions/setup-python@v4
      with:
        python-version: '3.13'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    - name: Build package
      run: |
        python -m build

    - name: Check package
      run: |
        python -m twine check dist/*

    # Uncomment when ready to publish to PyPI
    # - name: Publish to PyPI
    #   env:
    #     TWINE_USERNAME: __token__
    #     TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
    #   run: |
    #     python -m twine upload dist/*